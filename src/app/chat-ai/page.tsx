'use client'

import { ModernChat } from '@/components/chat/modern-chat'

export default function ChatAIPage() {
  const handleSendMessage = async (message: string): Promise<string> => {
    try {
      const response = await fetch('/api/chat-ai', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'ngrok-skip-browser-warning': 'true',
        },
        body: JSON.stringify({ message }),
      })
      
      const data = await response.json()
      
      if (data.success) {
        return data.response
      } else {
        return data.response || 'Erro ao processar sua mensagem.'
      }
    } catch (error) {
      console.error('Erro na comunica√ß√£o com IA:', error)
      return 'Erro de conex√£o. Verifique se o servi√ßo de IA est√° funcionando.'
    }
  }

  return (
    <div className="h-screen flex flex-col">
      <div className="flex-1 max-w-4xl mx-auto w-full">
        <ModernChat
          onSendMessage={handleSendMessage}
          className="h-full"
          placeholder="Digite sua solicita√ß√£o... Ex: 'Quantos mentorados temos?'"
          welcomeMessage="Ol√°! Sou seu assistente de Customer Success com IA integrada (Gemma 3:4b). 

üß† **Posso fazer qualquer coisa no sistema:**
‚Ä¢ Contar mentorados reais do banco de dados
‚Ä¢ Analisar formul√°rios inteligentemente  
‚Ä¢ Registrar pend√™ncias de pagamento
‚Ä¢ Gerar insights com IA sobre os dados
‚Ä¢ Cadastrar novos mentorados
‚Ä¢ Buscar informa√ß√µes espec√≠ficas

**Exemplos:**
‚Ä¢ 'Quantos mentorados temos?'
‚Ä¢ 'Analise os formul√°rios e me d√™ insights'
‚Ä¢ 'Jo√£o Silva deve 5000 de outubro'
‚Ä¢ 'Me d√™ um relat√≥rio completo'

Como posso ajudar?"
        />
      </div>
    </div>
  )
}